package br.com.pc2.rh.view.Chale;

import br.com.pc2.rh.controller.ChaleController;
import br.com.pc2.rh.model.Chale;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;

public class FrmChale extends JFrame {

    private static final long serialVersionUID = 1L;
    private JPanel contentPane;
    private JTable tblConsulta;
    private JTextField txtLocalizacao;
    private JTextField txtCapacidade;
    private JTextField txtValorAltaEstacao;
    private JTextField txtValorBaixaEstacao;
    private JLabel lblMensagem;
    private List<Chale> listaChales = new ArrayList<>();

    /**
     * Launch the application.
     */
    public static void main(String[] args) {
        EventQueue.invokeLater(() -> {
            try {
                FrmChale frame = new FrmChale();
                frame.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    /**
     * Create the frame.
     */
    public FrmChale() {
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setBounds(100, 100, 608, 534);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

        setContentPane(contentPane);

        JPanel panel = new JPanel();
        JPanel panel_1 = new JPanel();
        JPanel panel_2 = new JPanel();

        GroupLayout gl_contentPane = new GroupLayout(contentPane);
        gl_contentPane.setHorizontalGroup(
            gl_contentPane.createParallelGroup(GroupLayout.Alignment.TRAILING)
                .addGroup(GroupLayout.Alignment.LEADING, gl_contentPane.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(gl_contentPane.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(panel, GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                        .addComponent(panel_2, GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                        .addComponent(panel_1, GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE))
                    .addContainerGap())
        );
        gl_contentPane.setVerticalGroup(
            gl_contentPane.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(GroupLayout.Alignment.TRAILING, gl_contentPane.createSequentialGroup()
                    .addComponent(panel, GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(panel_1, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(panel_2, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
        );

        JScrollPane scrollPane = new JScrollPane();
        GroupLayout gl_panel_2 = new GroupLayout(panel_2);
        gl_panel_2.setHorizontalGroup(
            gl_panel_2.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(GroupLayout.Alignment.TRAILING, gl_panel_2.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                    .addContainerGap())
        );
        gl_panel_2.setVerticalGroup(
            gl_panel_2.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(gl_panel_2.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addContainerGap())
        );

        tblConsulta = new JTable();
        tblConsulta.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int linha = tblConsulta.getSelectedRow();
                txtLocalizacao.setText(tblConsulta.getValueAt(linha, 0).toString());
                txtCapacidade.setText(tblConsulta.getValueAt(linha, 1).toString());
                txtValorAltaEstacao.setText(tblConsulta.getValueAt(linha, 2).toString());
                txtValorBaixaEstacao.setText(tblConsulta.getValueAt(linha, 3).toString());
            }
        });
        tblConsulta.setModel(new DefaultTableModel(
            new Object[][] {},
            new String[] {
                "Localização", "Capacidade", "Valor Alta Estação", "Valor Baixa Estação"
            }
        ) {
            Class[] columnTypes = new Class[] {
                String.class, Integer.class, Double.class, Double.class
            };
            public Class getColumnClass(int columnIndex) {
                return columnTypes[columnIndex];
            }
            boolean[] columnEditables = new boolean[] {
                false, false, false, false
            };
            public boolean isCellEditable(int row, int column) {
                return columnEditables[column];
            }
        });
        scrollPane.setViewportView(tblConsulta);
        panel_2.setLayout(gl_panel_2);

        JButton btnInserir = new JButton("Inserir");
        btnInserir.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                Chale chale = new Chale();
                ChaleController cc = new ChaleController();
                chale.setLocalizacao(txtLocalizacao.getText());
                chale.setCapacidade(Integer.parseInt(txtCapacidade.getText()));
                chale.setValorAltaEstacao(Double.parseDouble(txtValorAltaEstacao.getText()));
                chale.setValorBaixaEstacao(Double.parseDouble(txtValorBaixaEstacao.getText()));
                lblMensagem.setText(cc.inserir(chale));
            }
        });
        btnInserir.setBackground(new Color(240, 240, 240));

        JButton btnAlterar = new JButton("Alterar");
        btnAlterar.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                Chale chale = new Chale();
                ChaleController cc = new ChaleController();
                chale.setLocalizacao(txtLocalizacao.getText());
                chale.setCapacidade(Integer.parseInt(txtCapacidade.getText()));
                chale.setValorAltaEstacao(Double.parseDouble(txtValorAltaEstacao.getText()));
                chale.setValorBaixaEstacao(Double.parseDouble(txtValorBaixaEstacao.getText()));
                // Você precisa garantir que o código do chalé esteja definido, talvez através da seleção da tabela
                chale.setCodChale(Integer.parseInt(tblConsulta.getValueAt(tblConsulta.getSelectedRow(), 0).toString()));
                lblMensagem.setText(cc.alterar(chale));
            }
        });

        JButton btnExcluir = new JButton("Excluir");
        btnExcluir.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                Chale chale = new Chale();
                ChaleController cc = new ChaleController();
                chale.setCodChale(Integer.parseInt(tblConsulta.getValueAt(tblConsulta.getSelectedRow(), 0).toString()));
                Object[] opcoes = {"Sim", "Não"};
                int i = JOptionPane.showOptionDialog(null,
                    "Deseja excluir o chalé localizado em: " + txtLocalizacao.getText() + "?", "Exclusão",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,
                    opcoes, opcoes[0]);
                if (JOptionPane.YES_OPTION == i) {
                    lblMensagem.setText(cc.excluir(chale));
                }
            }
        });

        JButton btnPesquisar = new JButton("Pesquisar");
        btnPesquisar.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                ChaleController cc = new ChaleController();
                listaChales = cc.listarTodos();
                DefaultTableModel tbm = (DefaultTableModel) tblConsulta.getModel();
                tbm.setRowCount(0); // Limpa a tabela
                for (Chale chale : listaChales) {
                    tbm.addRow(new Object[]{
                        chale.getLocalizacao(),
                        chale.getCapacidade(),
                        chale.getValorAltaEstacao(),
                        chale.getValorBaixaEstacao()
                    });
                }
            }
        });

        JButton btnLimpar = new JButton("Limpar");
        btnLimpar.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                txtLocalizacao.setText("");
                txtCapacidade.setText("");
                txtValorAltaEstacao.setText("");
                txtValorBaixaEstacao.setText("");
                DefaultTableModel tbm = (DefaultTableModel) tblConsulta.getModel();
                tbm.setRowCount(0); // Limpa a tabela
            }
        });

        JButton btnSair = new JButton("Sair");
        btnSair.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                FrmChale.this.dispose();
            }
        });

        GroupLayout gl_panel_1 = new GroupLayout(panel_1);
        gl_panel_1.setHorizontalGroup(
            gl_panel_1.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(gl_panel_1.createSequentialGroup()
                    .addComponent(btnInserir)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnAlterar)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnExcluir)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnPesquisar)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                    .addComponent(btnLimpar                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSair))
                        );
                        gl_panel_1.setVerticalGroup(
                            gl_panel_1.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(gl_panel_1.createSequentialGroup()
                                    .addGroup(gl_panel_1.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnInserir)
                                        .addComponent(btnAlterar)
                                        .addComponent(btnExcluir)
                                        .addComponent(btnPesquisar)
                                        .addComponent(btnLimpar)
                                        .addComponent(btnSair))
                                    .addGap(0, 0, Short.MAX_VALUE))
                        );
                        panel_1.setLayout(gl_panel_1);

                        JLabel lblLocalizacao = new JLabel("Localização:");
                        txtLocalizacao = new JTextField();
                        txtLocalizacao.setColumns(10);

                        JLabel lblCapacidade = new JLabel("Capacidade:");
                        txtCapacidade = new JTextField();
                        txtCapacidade.setColumns(10);

                        JLabel lblValorAltaEstacao = new JLabel("Valor Alta Estação:");
                        txtValorAltaEstacao = new JTextField();
                        txtValorAltaEstacao.setColumns(10);

                        JLabel lblValorBaixaEstacao = new JLabel("Valor Baixa Estação:");
                        txtValorBaixaEstacao = new JTextField();
                        txtValorBaixaEstacao.setColumns(10);

                        lblMensagem = new JLabel("");
                        lblMensagem.setForeground(Color.RED);

                        GroupLayout gl_panel = new GroupLayout(panel);
                        gl_panel.setHorizontalGroup(
                            gl_panel.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(gl_panel.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(gl_panel.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(lblMensagem, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(gl_panel.createSequentialGroup()
                                            .addGroup(gl_panel.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addComponent(lblLocalizacao)
                                                .addComponent(lblCapacidade)
                                                .addComponent(lblValorAltaEstacao)
                                                .addComponent(lblValorBaixaEstacao))
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(gl_panel.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addComponent(txtLocalizacao)
                                                .addComponent(txtCapacidade)
                                                .addComponent(txtValorAltaEstacao)
                                                .addComponent(txtValorBaixaEstacao))))
                                    .addContainerGap())
                        );
                        gl_panel.setVerticalGroup(
                            gl_panel.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(gl_panel.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(gl_panel.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblLocalizacao)
                                        .addComponent(txtLocalizacao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(gl_panel.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblCapacidade)
                                        .addComponent(txtCapacidade, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(gl_panel.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblValorAltaEstacao)
                                        .addComponent(txtValorAltaEstacao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(gl_panel.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblValorBaixaEstacao)
                                        .addComponent(txtValorBaixaEstacao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblMensagem)
                                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        );
                        panel.setLayout(gl_panel);

                        contentPane.setLayout(gl_contentPane);
                    }
                }

